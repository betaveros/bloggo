{"version":3,"file":"bundle.js","sources":["../../index.js"],"sourcesContent":["// Selected DOM elements\nconst menuToggle = document.querySelector('.menu-toggle');\nconst menuIcon = document.querySelector('.icon-menu');\nconst siteMenu = document.querySelector('.site-menu');\nconst socialMenu = document.querySelector('.social-menu');\n\n// Site and social menu toggle\nif (menuToggle) {\n  menuToggle.addEventListener('click', () => {\n    siteMenu.classList.toggle('collapsed');\n    socialMenu.classList.toggle('collapsed');\n    menuIcon.classList.toggle('icon-menu');\n    menuIcon.classList.toggle('icon-close');\n  });\n}\n\nconst unhiders = document.querySelectorAll('.unhide');\nfor (let i = 0; i < unhiders.length; i += 1) {\n  const elt = unhiders[i];\n  elt.addEventListener('click', () => {\n    const target = document.getElementById(elt.dataset.unhide);\n    if (target.classList.contains('hidden')) {\n      target.classList.remove('hidden');\n      elt.dataset.reshow = elt.innerText;\n      elt.innerText = elt.dataset.rehide;\n    } else {\n      target.classList.add('hidden');\n      elt.innerText = elt.dataset.reshow;\n    }\n  });\n}\n\n// This is NOT secure cryptographic code. For this specifically, my threat\n// model does not include side-channel attacks through timing or caches or\n// whatever. It does include people getting mad at me for bloated web pages.\n// Also it's kind of pretty just to see how many ideas are shared between\n// modern primitives and how simple everything is theoretically. This is sort\n// of \"semantically golfed\".\n\n// Most bitwise operators return signed integers by cutting off higher bits.\n// This is actually fine. We pretend we're playing with Java ints.\nfunction readInt32LE(arr, off) {\n  let acc = 0;\n  for (let i = off + 3; i >= off; i--) {\n    acc = (acc << 8) | arr[i];\n  }\n  return acc;\n}\n// Blithely ignores bytes that don't fit\nfunction writeInt32LE(buf, num, off) {\n  for (let i = off; i < Math.min(buf.length, off + 4); i++) {\n    buf[i] = num & 0xff;\n    num >>>= 8;\n  }\n}\nfunction rotate(v, n) {\n  return (v << n) | (v >>> (32 - n));\n}\n\nfunction encode(s) {\n  return new TextEncoder().encode(s);\n}\nfunction decode(s) {\n  return new TextDecoder().decode(s.buffer);\n}\n\nfunction quarter(t, ai, bi, ci, di) {\n  let [a, b, c, d] = [t[ai], t[bi], t[ci], t[di]];\n  a = (a + b) | 0; d = rotate(d ^ a, 16);\n  c = (c + d) | 0; b = rotate(b ^ c, 12);\n  a = (a + b) | 0; d = rotate(d ^ a, 8);\n  c = (c + d) | 0; b = rotate(b ^ c, 7);\n  [t[ai], t[bi], t[ci], t[di]] = [a, b, c, d];\n}\n\nfunction mutateChaCha20(message, nonce /* 12 bytes */, key /* 16 bytes */, counter = 0) {\n  let state = new Uint8Array(64);\n  state.set(encode(\"expand 32-byte k\"));\n  state.set(key, 16);\n  writeInt32LE(state, counter, 48);\n  state.set(nonce, 52);\n\n  let s = new Int32Array(16).map((_, i) => readInt32LE(state, 4*i));\n\n  for (let start = 0; start < message.length; start += 64) {\n    let end = Math.min(start + 64, message.length);\n    let t = s.slice();\n\n    for (let i = 0; i < 10; i++) {\n      quarter(t, 0, 4,  8, 12);\n      quarter(t, 1, 5,  9, 13);\n      quarter(t, 2, 6, 10, 14);\n      quarter(t, 3, 7, 11, 15);\n\n      quarter(t, 0, 5, 10, 15);\n      quarter(t, 1, 6, 11, 12);\n      quarter(t, 2, 7,  8, 13);\n      quarter(t, 3, 4,  9, 14);\n    }\n    t.forEach((e, i) => writeInt32LE(message, (e + s[i]) ^ readInt32LE(message, start + 4*i), start + 4*i));\n    s[12]++;\n  }\n  return message;\n}\n\nconst BLAKE2S_IV = Int32Array.of(\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19,\n);\n\nfunction mix(v, ai, bi, ci, di, x, y) {\n  let [a, b, c, d] = [v[ai], v[bi], v[ci], v[di]];\n  // blake2 rotates in the opposite direction from chacha20...?\n  a = (a + b + x) | 0; d = rotate(d ^ a, 16);\n  c = (c + d    ) | 0; b = rotate(b ^ c, 20);\n  a = (a + b + y) | 0; d = rotate(d ^ a, 24);\n  c = (c + d    ) | 0; b = rotate(b ^ c, 25);\n  [v[ai], v[bi], v[ci], v[di]] = [a, b, c, d];\n}\nconst gamma = [\n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n  [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n  [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n  [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n  [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n  [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n  [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n  [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n  [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n];\nfunction blake2s(input, key /* length in [0,32] */, salt_pers = null /* {0,4,8,12,16} */) {\n  const outlen = 32; // hard-coded\n  const keylen = key ? key.length : 0;\n  let hash = BLAKE2S_IV.slice();\n  hash[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen;\n  if (salt_pers) {\n    for (let i = 0; 4*i < salt_pers.length; i++) {\n      hash[4 + i] ^= readInt32LE(salt_pers, 4*i);\n    }\n  }\n  const block = new Uint8Array(64);\n  let blockPtr = 0;\n  let offset = 0;\n\n  function compress(isLastBlock = false) {\n    const v = new Int32Array(16);\n    v.set(hash);\n    v.set(BLAKE2S_IV, 8);\n    v[12] ^= offset;\n    v[13] ^= offset / 0x100000000;\n    if (isLastBlock) { v[14] = ~v[14]; }\n\n    const m = new Int32Array(16).map((_, i) => readInt32LE(block, 4 * i));\n    gamma.forEach(round => {\n      mix(v, 0, 4,  8, 12, m[round[ 0]], m[round[ 1]]);\n      mix(v, 1, 5,  9, 13, m[round[ 2]], m[round[ 3]]);\n      mix(v, 2, 6, 10, 14, m[round[ 4]], m[round[ 5]]);\n      mix(v, 3, 7, 11, 15, m[round[ 6]], m[round[ 7]]);\n      mix(v, 0, 5, 10, 15, m[round[ 8]], m[round[ 9]]);\n      mix(v, 1, 6, 11, 12, m[round[10]], m[round[11]]);\n      mix(v, 2, 7,  8, 13, m[round[12]], m[round[13]]);\n      mix(v, 3, 4,  9, 14, m[round[14]], m[round[15]]);\n    });\n\n    hash = hash.map((e, i) => e ^ v[i] ^ v[i + 8]);\n  }\n\n  function update(input) {\n    input.forEach(e => {\n      if (blockPtr === 64) {\n        offset += blockPtr;\n        compress();\n        blockPtr = 0;\n      }\n      block[blockPtr++] = e;\n    });\n  }\n\n  if (keylen > 0) {\n    update(key);\n    blockPtr = 64;\n  }\n  update(input);\n\n  // finalize\n  offset += blockPtr;\n  while (blockPtr < 64) { block[blockPtr++] = 0; }\n  compress(true /* isLastBlock */);\n\n  let out = new Uint8Array(outlen);\n  hash.forEach((e, i) => writeInt32LE(out, e, 4*i));\n  return out;\n}\n\nfunction b64encode(uarr) {\n  const carr = [];\n  uarr.forEach(function(u8) {\n    carr.push(String.fromCharCode(u8));\n  });\n  return btoa(carr.join(\"\"));\n}\nfunction b64decode(s) {\n  const bs = atob(s);\n  const uarr = new Uint8Array(bs.length);\n  for (let i = 0; i < bs.length; i++) {\n    uarr[i] = bs.charCodeAt(i);\n  }\n  return uarr;\n}\nfunction generateNonce() {\n  let ret = new Uint8Array(12);\n  window.crypto.getRandomValues(ret);\n  return ret;\n}\n// Not constant-time!\nfunction arrayEquals(a, b) {\n  return a.length === b.length && a.every((e, i) => e === b[i]);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  let hash = window.location.hash;\n  if (hash.startsWith('#decrypt:')) {\n    let userKey = encode(hash.substring(9));\n    let context = encode('betaverosChacha20Blake2sInsecure');\n    let cs = document.getElementsByClassName('betacipher');\n    for (let i = 0; i < cs.length; i++) {\n      const obj = cs[i];\n      const nonce = b64decode(obj.dataset.nonce);\n      const ciphertext = b64decode(obj.dataset.ct);\n      const key = blake2s(userKey, context);\n      const mac = blake2s(ciphertext, key, nonce);\n      if (arrayEquals(b64decode(obj.dataset.mac), mac)) {\n        obj.innerHTML = decode(mutateChaCha20(ciphertext, nonce, key));\n      }\n    }\n  }\n});\n"],"names":["readInt32LE","arr","off","acc","i","writeInt32LE","buf","num","Math","min","length","rotate","v","n","encode","s","TextEncoder","decode","TextDecoder","buffer","quarter","t","ai","bi","ci","di","a","b","c","d","mutateChaCha20","message","nonce","key","counter","state","Uint8Array","set","Int32Array","map","_","start","slice","forEach","e","mix","x","y","blake2s","input","compress","isLastBlock","hash","BLAKE2S_IV","offset","m","block","round","update","blockPtr","salt_pers","keylen","out","b64decode","bs","atob","uarr","charCodeAt","arrayEquals","every","menuToggle","document","querySelector","menuIcon","siteMenu","socialMenu","addEventListener","classList","toggle","unhiders","querySelectorAll","elt","target","getElementById","dataset","unhide","contains","remove","reshow","innerText","rehide","add","of","gamma","window","location","startsWith","userKey","substring","context","cs","getElementsByClassName","obj","ciphertext","ct","mac","innerHTML"],"mappings":"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"}